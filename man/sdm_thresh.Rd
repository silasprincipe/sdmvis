% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sdm_thresh.R
\name{sdm_thresh}
\alias{sdm_thresh}
\title{SDM Leaflet map with different thresholds}
\usage{
sdm_thresh(
  sdm,
  thresh,
  tname = NULL,
  pts = NULL,
  pal = NULL,
  crs = "standard",
  cluster = FALSE,
  layernames = NULL,
  simplify = TRUE,
  thresh.color = NULL
)
}
\arguments{
\item{sdm}{The SDM/ENM result. Should be in the Raster* format.}

\item{thresh}{A vector containing the thresholds to be applied (numeric values). If you want to try p10 and MTP, there is a function included in the package (\link[sdmvis]{sdm_get_thresh})}

\item{tname}{An optional character vector containing the names of the thresholds to be used in the legend. If not supplied, numerals will be used instead.}

\item{pts}{A data frame containing the presence or presence/absence points (optional). The first column should be longitude (x) and the sencond latitude (y). In the case of presence/absence data, an additional collumn should be provided, coded as 0 (absence) and 1 (presence).}

\item{pal}{Character string indicating the name of the continuous mode palette (see \link[sdmvis]{gen_pal}). If not supplied, the default will be used.}

\item{crs}{Enables to change the default projection used in the Leaflet package. For now, not functional.}

\item{cluster}{Should the points be clustered (i.e., aggregated)? Only valid if `pts` is supplied. Default is FALSE.}

\item{simplify}{Should the polygons be simplified? If TRUE, the output became lighter.}
}
\value{
A Leaflet map.
}
\description{
Create a Leaflet map with the results of an SDM and draw how different thresholds will result.
This map can be explored interactively in the viewer, so its possible to have a better comprehension of the outcomes of your SDM.
}
\examples{
library(sdmvis)
# Load data
data("thresholded_sdm")
data("pa_data")
# Create a list of SDMs and names
sdm.list <- list(thresholded_sdm[[1]], thresholded_sdm[[2]])
sdm.names <- c("current", "future")
# Plot
sdm_leaflet(sdm = sdm.list,
            mode = "bin",
            pts = pa_data,
           layernames = sdm.names)

}
